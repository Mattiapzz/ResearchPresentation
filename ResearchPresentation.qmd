---
title: "Optimal Control, Planning, and Intelligent Vehicles"
subtitle: "Leveraging optimal control and sampling-based methods for motion planning in autonomous driving"
bibliography: bibliography.bib
cls: IEEEtran.cls
author: 
  - name: "Mattia Piazza"
    # email: "mattia.piazza@unitn.it"
    affiliation: "PhD Candidate"
  - name: "Prof. Francesco Biral"
    # email: "francesco.biral@unitn.it"
    affiliation: "Supervisor"
  - name: "Prof. Mauro Da Lio"
    # email: "mauro.dalio@unitn.it"
    affiliation: "Co-supervisor"
# date: today
date: "2025-02-11"
# date-format: long
date-format: "D MMMM YYYY"
resources: data
execute: 
  enabled: true
slide-level: 2
format:
  revealjs: 
    # Output file
    output-file: index.html
    # Table of Contents
    toc: true
    toc_float: true
    toc-depth: 1
    toc-location: body
    toc-title: "Contents"
    # Generate a self-contained file
    # self-contained: true
    self-contained-math: true
    # template-partials:
    #   - title-slide.html
    theme: [ custom.scss]
    slideNumber: true
    center: false 
    transition: slide
    # logo and footer: 
    # logo: unitn.png
    footer: "Mattia Piazza | University of Trento, Italy"
    auto-play-media: true
    width: 1920
    height: 1080
    # html-math-method: katex #mathjax
    html-math-method: 
      method: mathjax
    code-fold: true
    # chalkboard: true
    filters: [custom.lua]
---

# Background
:::{.notes}
Hello everyone, thank you for having me today. I am Mattia Piazza, a Ph.D. candidate at the University of Trento in Italy supervised by Prof. Francesco Biral (same supervisor of your newly acquired Postdoc) and co-supervised by Prof. Mauro Da Lio.
I am here to present my research focusing on a sampling-based method for motion planning in autonomous driving where we employ also optimal control techniques. I will also present some of my recent projects and future works.
:::

## My Background 
### Personal experience and research activity

:::{.notes}
Let me start by briefly introducing myself. I have a Bachelor's degree in Mechanical Engineering from the University of Udine and a Master's degree in Mechatronics Engineering from the University of Trento. During my master's, I focused on optimal control for minimum lap time focusing on racing motorcycle with Professor Biral. This preliminary research caught the attention of a MotoGP racing team, and we started collaborating on a research project during a research fellowship. Currently, I am a Ph.D. candidate at the University of Trento, working on optimal control, planning, and autonomous driving. I am also involved in some industrial collaborations and projects funded by the Italian Ministry of Economic Development and Horizon Europe. 
As near future goals, I plan to spend a period abroad and start some fruitful collaborations, and of course finish my Ph.D. I am here today to discuss possible collaborations with your group.
:::

:::{.round-img-gray style="width: 20%; position: absolute; top: -10%; left: 80%;"}
![](./data/people/mattia_piazza.jpeg)
:::

<br>
<br>

:::{.timeline}

:::{.item style="width: 20%; background-color: var(--secondary-color_light);"}
:::{.img-wrapper style="width: 95%;"}
![](./data/logos/UniudDPIA.png)
:::

:::{.arrow style="background-color: var(--primary-color);"}
2013-2017
:::
:::{.text}
- BSc in Mechanical Engineering 
:::
:::

:::{.item style="width: 20%; background-color: var(--primary-color_light);"}
:::{.img-wrapper style="width: 100%;"}
![](./data/logos/Unitn_logos/Dip_Ing_Industriale_col.png)
:::
:::{.arrow style="background-color: var(--secondary-color);"}
2017-2020
:::
:::{.text}
- MSc in Mechatronics Engineering
- Optimal control 
- MLT for Motorcycles
:::
:::

:::{.item style="width: 20%; background-color: var(--secondary-color_light);"}
:::{.img-wrapper}
![](./data/logos/Unitn_logos/UniTrento_logo_ENG_colore.png){width=120%}
![](https://static.dorna.com/assets/logos/mgp/brand/mgp-logo-on-light.svg?v2){width=70%}
:::
:::{.arrow style="background-color: var(--primary-color);"}
2020-2022
:::
:::{.text}
- Research Fellowship
- MLT for MotoGP Racing Team
:::
:::

:::{.item style="width: 20%; background-color: var(--primary-color_light);"}
:::{.img-wrapper}
![](./data/third_party/StellantisLogoshort.png){width=80%}
![](./data/third_party/VeDi2025-logo.png){width=80%}
![](./data/third_party/SunriseHD.png){width=80%}
:::

:::{.arrow style="background-color: var(--secondary-color);"}
2022-now
:::
:::{.text}
- PhD in Mechatronics and Systems Engineering
- OCP, Planning and AD
- Industrial collaborations
- MISE and Horizon Europe projects
:::
:::

:::{.item style="width: 20%; background-color: var(--secondary-color_light);"}
:::{.img-wrapper}
![](./data/logos/Unitn_logos/UniTrento_logo_ENG_colore.png){width=120%}
![](https://static.dorna.com/assets/logos/mgp/brand/mgp-logo-on-light.svg?v2){width=70%}
:::
:::{.arrow style="background-color: var(--primary-color);"}
now-future
:::
:::{.text}
- Finish my PhD 
- Spend a period abroad
- Start some fruitful collaborations
:::
:::

::: 
<!-- timeline end -->


## VeDi2025 and SUNRISE Goals

:::{.notes}
Previously I mentioned some of the projects I am involved in. Let me give you a brief overview of the projects. 
VeDi2025 is a project funded by the Italian Govern, where we aim to exploit V2X communication to create cooperation and furthermore negotiation between connected and automated vehicles. Our task was to develop a real-time local planner with dynamic obstacle avoidance and cooperative negotiation and validate it with real-world testing. 
On the other hand, SUNRISE is a project funded by Horizon Europe, where the aim is the development of a safety assurance framework for the test and safety validation of CCAM systems. Our goal was to test some of the defined logical scenarios and KPIs, run simulations to collect results, and propose a method to evaluate and rank autonomous agents.
:::

:::{.tbbox}

::: {.titlebox}
VeDi2025
:::
::: {.columns}
:::: {.column width="80%"}
**CCAVs maneuver negotiation** through **V2X**:

- Develop a **real-time local planner** for autonomous driving.
  - **Dynamic** obstacle avoidance.
  - Cooperation and **negotiation**.
- **Validate** the planner with real-world testing.

::::

:::: {.column width="20%"}
![](./data/third_party/VeDi2025-logo.png)
![](./data/third_party/StellantisLogoshort.png)
::::

::: 

:::

:::{.tbbox}

::: {.titlebox}
SUNRISE
:::
::: {.columns}
:::: {.column width="25%" align-items="center" justify-content="center"}
![](./data/third_party/SunriseHD.png)
::::
:::: {.column width="75%"}
Safety Assurance Framework for the test and safety validation of CCAM systems.

- Identify logical scenarios and KPIs
- Run simulations to collect results.
- Propose a method to **evaluate and rank** autonomous agents.
::::


::: 

:::


# Research motivations and contributions

## Autonomous Driving

:::{.notes}
A bit about the motivation behind my research. The main goal of autonomous driving is to improve safety and sustainability. According to the European Commission, 90% of road accidents are due to human errors and furthermore, the EU target is to reach zero road fatalities by 2050. However, there are still some open challenges to overcome, such as safe and robust planning and control, operation in emergency scenarios, human-like driving behavior, and cooperation and negotiation with other agents. (in this field there is no common agreement on the preferred and more sustainable solution)
:::

:::{.columns}
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Safety Motivation
:::

- Improve **safety** and sustainability.
- 90\% of road accidents are due to **human errors**.
- EU target: zero road fatalities by 2050.
- Decrease traffic congestion and others.
:::
::::

:::: {.column width="50%"}

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Open Challenges
:::

- Safe and robust **planning** and control.
- Operation in **emergency** scenarios.
- **Human-like** driving behavior.
- **Cooperation** and **negotiation** with other agents.
:::
::::
:::

:::{.columns}
:::: {.column width="50%"}
![](./data/intro_phd_Piccinini/occurrences_autonomous_driving.png){width=70% fig-align="center"}
::::

:::: {.column width="50%"}
![](./data/intro_phd_Piccinini/waymo_IPACE_3_resized.png){width=70% fig-align="center"}
::::
:::

## Contributions

### Semi-structured RRT* planner

:::{.notes}
Therefore in this field we bring as a contribution a semi-structured RRT* planner, hence a sampling based planner that embeds optimal control primitives insides. The planner is able to compute feasible trajectories in real-time, handle dynamic obstacles, and provide finite-time guarantees. The planner is specialized for autonomous urban and racing scenarios.
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
MPTree
:::

:::{.columns}

:::: {.column width="80%"}

Given a simple set of constraints the planner is able to

- compute feasible and optimal trajectory.
- handle dynamic obstacles.
- provide finite time guarantees.

::::

:::: {.column width="20%"}
![](./data/logos/MPTree_logo.png)
::::
:::

:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Specialized Framework
:::
- **Autonomous Racing** MPTreeRace
- **Urban Driving** UrbanMPTree
:::


## Contributions
### C++ implementation and commercial software integration, SIL and HIL testing

:::{.notes}
It is not just that we went beyond the first idea and implementation and I coded the planner in a C++ library which was then integrated inside IPG CarMaker (Industrial simulator) and RTMaps to properly perform SIL testing with all the car subsystems. Furthermore, we tested the planner with real-world testing with Stellantis.
:::

:::{.tbbox}
:::{.columns}
:::: {.column width="70%"}
- Fast **C++** implementation of the planner.
- Integration with **IPG CarMaker**.
- Integration inside **RTMaps** and **dSpace** Autera.
- Real-world testing with **Stellantis**.
::::
:::: {.column width="30%"}
::::
:::

:::{.columns}
:::: {.column width="33%"}
![](./data/third_party/IPG-Automotive-logo.png){width=90% fig-align="center"}
::::
:::: {.column width="33%"}
![](./data/third_party/dSpace_logo.png){width=90% fig-align="center"}
::::
:::: {.column width="33%" }
![](./data/third_party/StellantisLogoshort.png){width=90% fig-align="center"}
::::
:::

:::

# MPTree framework

## State-of-the-Art 
### Planning Approaches

:::{.notes}
Stepping back, let me give you a brief overview of pros and cons of the two methods used in motion planning. Optimization-based planning is local, fast, and accurate but has limited obstacle handling and no finite-time guarantees. On the other hand, sampling-based methods are global, usually slow, and have limited dynamics but are flexible, anytime, and have better obstacle handling.
:::

|                   | Optimization-based planning              | Sampling/Graph-based planning        |
|-------------------|------------------------------------------|--------------------------------------|
| Optimum           | [**Local**]{style="color:red;"}          | [**Global**]{style="color:green;"}   |
| Time              | [**Fast**]{style="color:green;"}         | [**Slow**]{style="color:red;"}       |
| Dynamics          | [**Accurate**]{style="color:green;"}     | [**Limited**]{style="color:red;"}    |
| Obstacles         | [**Limited**]{style="color:red;"}        | [**Flexible**]{style="color:green;"} |
| Guarantees        | [**No finite-time**]{style="color:red;"} | [**Anytime**]{style="color:green;"}  |
| Continuity        | [**Recursive**]{style="color:green;"}    | [**Limited**]{style="color:red;"}    |


## Planner idea
### Combine the best of both worlds

:::{.notes}
Hence, our idea is to take the best of the two words, combine them and overcome the limitations of each. We developed a planner that is able to compute feasible and optimal trajectories in real-time, handle dynamic obstacles, and provide finite-time guarantees. This is done combining RRT* with optimal control solutions. The planner is specialized for autonomous urban and racing scenarios.
:::

Combine **OC** and **sampling-based** methods ensuring **dynamic obstacle avoidance**.

- RRT $^*$ with semi-structured tree exploration (sampling)
- MP (OC solutions) \cite{piazza2024mptree} [@piazza2024mptree]

Flexible approach, specialized for **autonomous urban** and **racing** scenarios.

## Framework Overview

:::{.notes}
Our framework operates in the classic perception action control paradigm. We receive information from the environment (sensors and communication) and compute the best maneuver every 50 ms. 
Inside the planning phase we update the internal representation of road and obstacles. We update the mesh with information regarding the road and obstacles, and then we perform a tree exploration with by sampling new points choosing the best connection in a neighborhood, and look for possible rewire at every iteration.
:::

<br>
![](./data/Diagrams/fig-MPTree-architecture.png)



## Mesh environment

:::{.notes}
Before I spoke about meshing, We represent the road with clothoids (piecewise continuous in curvature). Inside that we cut virtually the road in sections (waylines) and nodes (waypoints) The sampling phase can happen offline (racing) or online (urban) and we can update the mesh with new information. The meshing phase can embed information about the road topology as well as the obstacles.
:::

:::{.columns}
:::: {.column width="50%"}
![](./data/Diagrams/fig-MPTree-map.png)
::::
:::: {.column width="50%"}

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Road Representation
:::

- **Curvilinear coordinates:** employ clothoid (Frénet frame).
- **Waylines:** road cross section.
- **Waypoints:** sampled in the waylines.
- **Topology aware meshing**
:::

::::
:::


## Obstacle Handling

:::{.notes}
One important key aspect is the obstacle handling in the urban scenario. In the initial phase of the plan we predict the obstacle motion, and we compute intersection points and time. Moreover, we compute regions of the space (lateral coordinate time) that are inhibited for the vehicle. We also add additional waylines at the intersection to avoid collisions.
We defined our approach as semi-structured RRT* because we use a finite-time solution, our sampling policy is not only random but combines a first phase that is structured and deterministic. Furthermore, we start the sampling using the previous solution (as you will do in a warm start) then we proceed with sampling in a schematic order following a common logic (maneuver in lane center at target speed).
Last important aspect is the connection between nodes that is done with optimal motion primitives, we use a mixed sampling policy to avoid useless iterations. The application we develop is very time-sensitive therefore all useless iterations must be avoided if possible.
:::

:::{.columns}
:::: {.column width="50%"}
![](./data/Diagrams//fig-Obs-VRU-02.png)
::::
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Obstacle Prediction
:::

- **Urban:** constant velocity model or minimum-time trajectory.
- **Additional waylines** at intersection.
- **Waypoints** in inhibited regions discarded.
:::


:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titleboxL}
Semi-structured RRT*
:::

- **Anytime approach:** finite-time solution.
- **Mixed sampling:** **Warm start**, **Structured** and **Random**
- **Connections** with optimal motion primitives.
:::

::::
:::


## Motion Primitives

### Common Lateral

:::{.notes}
We employ a set of common lateral motion primitives both for the racing application and the urban.
The motion primitives adopted are G2 clothoids that are a solution of this optimal control problem. Minimize the Length of a curved path by controlling the curvature rate, given the simple dynamic and with prescribed boundary conditions. The solution is semi-analytical. And it is completely independent of the road curve
:::

:::{.columns}
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Formulation
:::

**$G^2$ clothoids** and **Continuous curvature** MP (closed-form solution).


$$
\begin{array}{r@{~}c@{~}l}
  &\displaystyle \min_{c(s)}& \; L\\
  &\mathrm{s.t}.&\left\{
  \begin{aligned}
    x^\prime(s)&=\cos{\theta}(s)\\
    y^\prime(s)&=\sin{\theta}(s)\\
    \theta^\prime(s)&=\kappa(s)\\
    \kappa^\prime(s)&=c(s) 
  \end{aligned}
  \right. \\
  &\mathrm{b.c.}& \left\{
  \begin{aligned}
    x(0) &= x_0, \; \\
    \theta(0) &= \theta_0, \; \\
    x(L) &= x_L, \; \\ 
    \theta(L) &= \theta_L, \; 
  \end{aligned}
  \begin{aligned}
    y(0) &= y_0, \\
    \kappa(0) &= \kappa_0\\
    y(L) &= y_L, \\ 
    \kappa(L) &= \kappa_L
  \end{aligned}
  \right.
\end{array}
$$

:::
::::
:::: {.column width="50%"}
<br>
<br>
<br>

![](./data/MP/CLOTH_N_road_K_road.png)
::::
:::

## Motion Primitives
### Urban longitudinal (Analytical)

:::{.notes}
The longitudinal motion primitive for the urban case is again the solution of an optimal control problem where we minimize both the time and the jerk squared, subjected to this double integrator dynamics. (controlled in jerk) subjected to initial and final conditions. This problem yields a closed-form polynomial solution and the final unknown time can be computed semi-analytically. This can allow us to define family of solutions going from A to B by changing the weight associated to the minimum time cost.
These primitives do not embed directly the limits of the vehicles. Hence, Longitudinal and lateral maximum acceleration are computed after and values that exceed the limits are discarded or strongly penalized in the cost function.
:::

:::{.columns}
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Formulation
:::

$$
  \begin{array}{r@{~}c@{~}l}
    &\displaystyle \min_{j_x(t)}& \; {\displaystyle \int_{0}^{T}{\big(w_T+j_x(t)^2\big)\,\mathrm{d} t}}  \\ \\
    &\mathrm{s.t.}& \left\{
    \begin{aligned}
      \dot{s}(t)&=v_x(t)\\
      \dot{v}_x(t)&=a_x(t)\\
      \dot{a}_x(t)&=j_x(t)
    \end{aligned}
    \right.\\
    &\mathrm{b.c.}& \left\{
    \begin{aligned}
      s(0)&=\ 0, \;\\
      v_x(0)&=v_0,\;\\
      a_x(0)&=a_0\;,
    \end{aligned}
    \begin{aligned}
      s(T)&=L\\
      v_x(T)&=v_T\\
      a_x(T)&=a_T
    \end{aligned}
    \right.\\
    \;
  \end{array}
$$
:::
::::
:::: {.column width="50%"}
<br>
<br>
<br>

![](./data/MP/MP_1020_space.png)
::::
:::

## Motion Primitives
### Racing longitudinal (Forward-Backward)

:::{.notes}
For the racing application, we employ a different primitive. It is again an optimal control solution. but the dynamics is a bit more complex and takes directly into account the curvature of the profile. In this case we do not minimize the jerk but just the time. And we obtain a solution at the maximum performance.
:::

:::{.columns}
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Formulation
:::

$$
  \begin{array}{r@{~}c@{~}l}
    &\displaystyle \min_{a_x \in \mathbb A}& \; T \\
    &\mathrm{s.t.}& \left\{
    \begin{aligned}
      \dot{s}&=v_x\\
      \dot{v}_x&=a_x - c\,v_x - d\,v_x^2\\
      a_{x_{\mathrm{min}}} &\leq a_x \leq a_{x_{\mathrm{max}}}\\
      % |a_y| &\leq& a_{y_{\mathrm{max}}} 
      a_{y_{\mathrm{max}}} &\geq |a_y| = \kappa~v_x^2
    \end{aligned}
    \right.\;\\
    \\
    &\mathrm{b.c.}& \left\{
    \begin{aligned}
      s(0)&=0\\
      s(T)&=L\\
      v_x(0)&=v_0\\
      v_x(T)&=v_T
    \end{aligned}
    \right.
  \end{array}
$$
:::
::::
:::: {.column width="50%"}
<br>
<br>
<br>

![](./data/MP/MP_FWBW_space.png)
::::
:::



## Cost Function

### Urban multi-objective + negotiation [@piazza2024mptree ;@piazza2025emergent]

:::{.notes}
We also employ different cost functions for urban and racing scenarios. In the urban case, the cost function, is composed of a weighted sum of different objectives. The objectives are the minimum travel time, the lateral and longitudinal jerk, the deviation from the target speed, from the target lateral position. The weights are chosen to balance the different objectives. 
Furthermore, we also added a negotiation term that computes the distance from the desired trajectory of a CCAM vehicle and the planned one. All costs are normalized hence the cost function is one under 0 and 0 when the two trajectories are distant more than a safety distance.
:::

:::{.columns}
:::: {.column width="35%"}
![](./data/MPT_Piazza/Cooperative_approach.png)
::::
:::: {.column width="65%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Urban multi-objective
:::
$$
  J_{MO}={ \displaystyle\sum_{i=1}^{N_s}} \left(W_T~ J_T^i + W_L~ J_L^i + W_V~ J_{v_{x}}^i + W_{j_x}~ J_{j_x}^i + W_{a_y}~ J_{a_y}^i\right)
$$
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
\+ negotiation 
:::
$$
\begin{aligned}
  J=&J_{MO} + {\displaystyle\sum_{i=1}^{N_s}} \left({ W_{\mathrm{Neg}}~ \sum_{i=0}^N\int_{0}^{T}\Gamma_{\mathrm{des}}(d_{\mathrm{des}_i})\mathrm{d}t} \right) \\
  \Gamma_{\mathrm{des}}(d_{\mathrm{des}_i})=& \left\{
    \begin{array}{ll}
      1 & d_{\mathrm{des}_i} \le 0\\
      1 - \frac{d_{\mathrm{des}_i}}{d_{\mathrm{des_{\mathrm{safe}}}}} & 0<d_{\mathrm{des}_i}<d_{\mathrm{des_{\mathrm{safe}}}}\\
      0 & d_{\mathrm{des}_i} \ge d_{\mathrm{des_{\mathrm{safe}}}}
    \end{array}
  \right.
\end{aligned}
$$
:::
::::
:::


## Cost Function

### Racing

:::{.notes}
In the racing case the cost function is only one, and it is the minimum travel time. However, other objectives may be introduced to improve safety, robustness, and continuity with the previous solution.
:::

:::{.columns}
:::: {.column width="40%"}
<br>
<br>
<br>

![](./data/Diagrams/MPT_PistaAzzurra_scenario_1_plot_2_thicker.png)
::::
:::: {.column width="59%"}

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Minimum Travel Time + Penalties
:::

$$
  J_{MO}={ \displaystyle\sum_{i=1}^{N_s}} W_T~ J_T^i
$$

Where $J_T^i$ depends only on the travel time.

Of course, we can integrate other cost functions to improve safety, robustness, and continuity with the previous solution.

$$
  J_{MO}={ \displaystyle\sum_{i=1}^{N_s}} \left( W_T~ J_T^i + W_C J_C^i + W_{\mathrm{pen}} J_{\mathrm{pen}}^i + \dots{} \right)
$$
:::

::::
:::

## Simulation results 

### MPTree race

:::{.notes}
Here we have some results for the racing implementation where the vehicle is able to overtake all slow opponents in front in this circuit section.
:::

<div id="contentframe" style="position:relative; left: 10%; width: 90%; height: 90%">
{{< video https://www.youtube.com/embed/INeFcYHTh58?rel=0  width="90%" height="90%" autoplay="true" loop="true" muted="true">}}
</div>



## Simulation results

### MPTree Urban (Matlab)

:::{.notes}
And here some Matlab simulation as well of an urban case where the vehicle is able to vehicle crossing an unsigned orthogonal intersection.
:::

<div id="contentframe" style="position:relative; left: 10%; width: 90%; height: 90%">
{{< video https://www.youtube.com/embed/pt_zcB4BlT4?rel=0  width="90%" height="94.45%" autoplay="true" loop="true" muted="true">}}
</div>

<!-- ## Projects VeDi 2025

:::{.notes}
Let me briefly talk about the VeDi 2025 Project before moving on with the results.
VeDi was a project funded by the Italian Government where I was heavily involved. The aim was to exploit V2X communication to create cooperation and furthermore negotiation between connected and automated agents. Our task was to develop a real-time local planner with dynamic obstacle avoidance and cooperative negotiation and validate it with real-world testing hence to negotiate cost introduced some slides before.
Inside this project we specialize this planner specially for urban scenario, and we validate both with SIL and VIL testing.
:::

::: {.tbbox}
::: {.titlebox}
Goals 
:::
::: {.columns}
:::: {.column width="70%"}

- Develop a **real-time local planner** for autonomous driving.
  - **Dynamic** obstacle avoidance.
  - **Safety** and optimality of maneuver.
  - Cooperation and **negotiation**.
- Specializing planner for urban collaborative scenarios.
- **Validate** the planner with real-world testing.
- Test vehicle cooperation and **negotiation with CCAV** and V2X.

::::

:::: {.column width="28%"}
![](./data/third_party/VeDi2025-logo.png)
![](./data/third_party/StellantisLogoshort.png)
::::
:::
::: -->

## Simulation results 

### MPTree urban uncooperative negotiation (Matlab) [VeDi 2025]

:::{.notes}
So here I have an example of an orthogonal intersection without communication where our agent needs to slow down much going from 40 km/h to 20 km/h to avoid a collision.
:::

<div id="contentframe" style="position:relative; left: 2.5%; width: 100%; height: 90%">
{{< video https://www.youtube.com/embed/ZGPrtMU95nA?rel=0  width="100%" height=90.40% autoplay="true" loop="true" muted="true">}} 
</div>

## Simulation results 

### MPTree urban cooperative negotiation (Matlab) [VeDi 2025]

:::{.notes}
On the other hand, when comunication is enambled the agent need to slow down much less and the negotiation is successful. Ego need to slow down just to 30 km/h
:::

<div id="contentframe" style="position:relative; left: 2.5%; width: 100%; height: 90%">
{{< video https://www.youtube.com/embed/2HqBKIeUNFc?rel=0  width="100%" height=90.40% autoplay="true" loop="true" muted="true">}}
</div>


<!-- ## Integration in CarMaker {.hidden}

### SIL testing in IPG CarMaker and validated vehicle model

:::{.notes}
After demonstrating the potential of the approach in Matlab we implemented the planner in C++ and integrated it in IPG CarMaker. Here we have some results of the planner in action in the SIL testing.
:::

<div id="contentframe" style="position:relative; left: 10%; width: 90%; height: 90%">
{{< video https://www.youtube.com/embed/xxCWsTfNBKY?rel=0  width="100%" height="95%" autoplay="true" loop="true" muted="true">}}
</div> -->

## Integration in carmaker (VeDi 2025)

### SIL testing for negotiation

:::{.notes}
After demonstrating the potential of the approach in Matlab we implemented the planner in C++ and integrated it in IPG CarMaker. Here we have some results of the planner in action with complete real vehicle model and other subsystems simulated
:::

:::{.columns}
:::: {.column width="58.4%"}
{{< video https://www.youtube.com/embed/R3iCVDXGoao?rel=0  width="100%" height=600 autoplay="true" loop="true" muted="true">}}
::::
::::{.column width="41.6%"}
{{< video https://www.youtube.com/embed/5qmvcFmvGVE?rel=0  width="100%" height=600 autoplay="true" loop="true" muted="true">}}
::::
:::


## Real vehicle testing (VeDi 2025)

### VIL testing 

:::{.notes}
Here I can only show this frames with my planner running and driving Stellantis car inside the test site in Bolzano.
:::

```{=html}
<!-- add video -->
<div style="display: flex; justify-content: center; padding: 0px;">
  <video width="80%" height="70%" autoplay loop muted controls padding="0px">
    <source src="data/videos/videoVadenaAutonomous.mp4" type="video/mp4">
    <!-- <source src="/Users/mattiapiazza/git/Personal/ResearchPresentation/data/videos/videoVadenaAutonomous.mp4" type="video/mp4"> -->
  </video>
</div>
```


## Real vehicle testing (VeDi 2025)

:::{.notes}
But I can show you some real vehicle telemetry regarding the vehicle testing of the intersection with the communication and cooperation and without. Left is when Agents do not share information about intentions and right is when they do.
:::

<!-- ### VIL velocity profiles -->

:::{.columns}
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Camera
:::
![](./data/Figures_UniTN_onlyCAM/speed_vs_dist_at30kmh.png){width=90% fig-align="center"}
:::
::::
:::: {.column width="50%"}
:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titleboxL}
V2X
:::
![](./data/Figures_UniTN_onlyV2X/speed_vs_dist_at30kmh.png){width=90% fig-align="center"}
:::
::::
:::
![](./data/Vadena/VadenaIntersection_traj_crop.png){width=50% fig-align="center"}


## Performance and limits

:::{.notes}
Let me now talk about the performance and limits of the planner. The planner is asymptotically optimal, can handle complex maneuvers combinations, and provides feasible solutions for the vehicle model. However, the computational time could be enhanced, and the quality of the solution highly depends on the hardware. For example, we can compute around 600 maneuvers in 50 ms with 2-3 obstacles on an Intel i5 at 4.5 GHz. However, on dSpace Autera with an Intel Xeon 12 cores at 2.0 GHz, we can compute around 200 maneuvers in the same time.
We notice that the planner was losing performance when it was not able to find a connection up to the last wayline and was considering good solution leading to potential impacts because have no information about the future.
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Performance
:::
- **Asymptotic** optimality.
- **Complex** maneuvers combinations.
- **Feasible** solution for the vehicle model.
- $\sim600$ MP in $50\,ms$ with 2-3 obstacles (C++ on Intel i5 @ 4.5 GHz).
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Limits
:::
- **Computational** time could be enhanced.
- **Quality** of the solution **highly** depends on the hardware.
  - $\sim200$ MP on dSPace Autera (Intel Xeon 12 cores @ 2.0 GHz)
- Time lost to evaluate useless solutions
  - Maneuver cost is evaluated up to the node
  - No metrics to evaluate solution forward.
:::

<!-- ## Limits and future works {.hidden}
### Monte Carlo Tree Search

![](./data/MCTS/MCTS.png){width=90% fig-align="center"} -->


## Limits and future works 
### Monte Carlo Tree Search

:::{.notes}
We wanted to overcome some of the limitation of our approach by avoiding the random sampling of the RRT* and we implemented a Monte Carlo Tree Search approach also using the same primitives but evaluating both the cost to a node and a metric for a rollout policy. This allows us to have a cleaner solution with an implementation that can support multithreading.
:::

<div id="contentframe" style="position:relative; left: 22%; width: 56%; height: 90%">
{{< video https://www.youtube.com/embed/PwzN7FfxiCc?rel=0  width="100%" height="95%" autoplay="true" loop="true" muted="true">}}
</div>



# Other projects

## SUNRISE - Safety Assurance Framework 
### Agents comparison and evaluation [@cherubini2024bootstrapped]

:::{.notes}
A fast note about SUNRISE. Sunrise is a European project I was marginally involved in. The aim of the whole project is to devise a common framework for testing and ensuring safety of autonomous systems and ADAS. The framework should define critical testing scenarios for each ODD and define parameters to be tested as well as metrics to evaluate the performance. The project is still ongoing, and the results are not yet available. However, I wanted to mention Some result we achieve by comparing different available planners in his particular scenario. A Highway cut-in. We propose to variate 5 parameters inside. The initial speed, the speed difference, the time to cut-in, the acceleration of the cut-in vehicle, and the distance of the cut-in vehicle. We evaluate the performance of different planners by comparing the time to collision and the distance to collision. We use a bootstrapped method to evaluate the performance of the planners.
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Logical scenario
:::
:::{.columns}
:::: {.column width="30%"}
![](./data/img_ODD/ODD_highway_v2.png){width=100% fig-align="center"}
::::
:::: {.column width="70%"}
<!-- ![](./data/img_ODD/exit.png){width=50% fig-align="center"} -->

- Test vehicle **CCAM** and applications.
- Define common **metrics**, **KPIs**, **test cases**, and **logical parameters**
- Propose a method to **evaluate and rank** autonomous agents.

:::{.custom-small}
| Variable    | min     | max    | unit    |
|:-----------:|--------:|-------:|:--------|
| $v_0$       | $10.0$  | $25.0$ | $m/s$   |
| $v_1 - v_0$ | $-5.0$  | $7.0$  | $m/s$   |
| $T$         | $1.5$   | $7.5$  | $s$     |
| $a_1$       | $-6.0$  | $3.0$  | $m/s^2$ |
| $d$         | $-20.0$ | $40.0$ | $m$     |
:::

::::
:::
:::

## SUNRISE 
### Agents comparison [@cherubini2024bootstrapped]


:::{.notes}
We performed a hundred of testing and train neural network to categorize outcome in collision, safe and near miss depending on the above-mentioned parameters. Here you can appreciate different results for two different scenarios and different planners. Left is Prof Da Lio human-like planner middle is the intelligent driver model and right is the MPTree planner. We can definitely see many differences already in the performance of the tree. In this case we cannot conclude anything about the three. But we can definitely tell that they behave in a very different manner.
:::

![](./data/img_ODD/slices.png){width=70% fig-align="center"}



## SUNRISE
### Suggested distance 

:::{.notes}
Then we suggested training multiple neural networks to predict collision and near miss and propose a consensus formula where we accept the decision of the majority of the networks or a certain threshold of them. Then this networks can be used to suggest either a safe distance or a safe speed. This will correspond to the distance safe for the majority of unanimous of the NNs.
:::

![](./data/img_ODD/safe_charts.png){width=70% fig-align="center"}


## MLT for MotoGP {background-image="data/MLT/Moto/MotoLeanSimple.png" background-opacity="0.08"}
### Problem statement

<!-- {.background-image="data/MLT/Moto/MotoLeanSimple.png"} -->
:::{.columns}

:::: {.column width="40%"}
:::{.tbbox}
::: {.titlebox}
OCP
:::
$$
  \begin{aligned}
    \min \; T & = \min \int_0^L \frac{w_T}{\dot{s}} \, \mathrm{d}\zeta \\
    \mathrm{s.t.} \quad &\mathbf{A}(\mathbf{x},\mathbf{u}) \, \mathbf{\dot{x}} = \mathbf{b}(\mathbf{x},\mathbf{u}) \\
    \mathrm{Cyclic} \; \mathrm{b.c.} \quad &\mathbf{x}(0) = \mathbf{x}(L)\\
    % &\dot{s}(\zeta) = \frac{u(\zeta) \cos(\xi(\zeta)) - v(\zeta) \sin(\xi(\zeta))}{1-\kappa(\zeta) n(\zeta)} )
  \end{aligned}
$$
:::
::::

:::: {.column width="60%"}
:::{.tbbox}
::: {.titlebox}
Vehicle Dynamics
:::
- Rigid body model, internal DoF, slip dynamics ($30$ states).
- Engine torque envelope + chain tensioning effect.
- Soft penetration (tyre ground).
- Full tyre model (MF-MCTyre 1.1).
- Aerodynamic maps for drag lift and application point.
:::
::::

:::

:::{.notes}
(suspensions, steer, rider body position, wheels).
:::

## MLT for MotoGP {background-image="data/MLT/Moto/bikestraigth_flank.png" background-opacity="0.05"}
### How to initialize the problem 

:::{.notes}
Does everything work right out of the box? No, for sure this is a perfect recipe for a disaster.
So, Idea...
Solve a similar problem more treatable (less complex), convex, and quadratic.
Then solve iteratively a problem converging to the original one.
:::

:::{.columns}
:::: {.column width="40%"}
:::{.tbbox}
::: {.titlebox}
Initialization
:::

- **Convex** and **quadratic** problem
- **Simple** and **fast** solution
- **Iterative** solution
- **Convergence** to the original problem
- **Warm start** for the original problem

:::
::::
:::: {.column width="60%"} 
$$
  \min \int_0^L \frac{w_T}{\dot{s}} \, \mathrm{d}\zeta
$$

Transformed into a "more" **quadratic** problem

:::{.notes}
Other terms might be added
:::

$$
  \min \int_0^L \left( \frac{w_T}{\dot{s}} + (\mathbf{x}-\mathbf{x_{qss}})^T \mathbf{W_{qss}}  (\mathbf{x}-\mathbf{x_{qss}})  \right) \, \mathrm{d}\zeta 
$$
::::
:::


## MLT for MotoGP 
### Continuation - Homotopy

0. $w_T << 1$, $\mathbf{W_{qss}} = 1$ (Constant velocity). Fixed initial conditions and free final conditions
1. $w_T =  1$, $\mathbf{W_{qss}} = 0$ (Optimal time). Fixed initial conditions and free final conditions
2. Fixed initial conditions and final conditions equal to the initial conditions
3. Cyclic conditions
4. Push the penalty values on constraints

![](./data/MLT/OCI/Track_problemCompare.png){width=100% fig-align="center"}

## MLT for MotoGP
### Solution example Catalunya RSV1000

<div id="contentframe" style="position:relative; left: 10%; width: 90%; height: 90%">
{{< video https://www.youtube.com/embed/b1tqsGL5tgA?rel=0  width="100%" height="87%" autoplay="true" loop="true" muted="true">}}
</div>




# Future works 

## Monte Carlo Tree Search on scale vehicles

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Next steps
:::
- Finish Software test with commercial simulator **IPG CarMaker**.
- Test the planner with several **scenarios datasets** (i.e. nuScene).
- Implement the planner on scale vehicles.
:::

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Future goals
:::
- Introduce **learning** of planner parameters.
- Specialize planner with different primitives.
- **Real and/or scale vehicle** testing
:::


## Sampling based initialization of MPC 

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
MPC needs and problems
:::
- Systematically reliable initial guess.
- Well-posed final conditions or reference trajectory to track.
- Problems may also arise with obstacles (non-convexity).
:::


:::{.tbbox} 
<!-- #### My Custom Title -->
::: {.titlebox}
Core idea
:::
- Perform a rapid exploration with ad-hoc motion primitives (i.e. MP able to satisfy the MPC constraints).
- Get one or few possible solutions and use as initial guess for the MPC.
:::


## MLT Motorcycle
### MotoGP team collaboration

:::{.tbbox}
<!-- #### My Custom Title -->
::: {.titlebox}
Goals
:::

- Include **rider** position as additional control.
- Gearshift and **gear selection** for optimal engine brake.
- CFD **aerodynamic maps**.
- Compare results with last year **telemetry data**.
:::


## References

::: {#refs}
:::


## {background-video="data/third_party/end.mov" background-video-loop="true" background-video-muted="true" background-video-autoplay="true" }

<br>
<br>
<br>

::: {.tbbox style="text-align: center;"}
<!-- #### Q & A -->
::: {.columns}
:::: {.column width="90%"}
::: {.r-fit-text style="font-weight: bold; font-size: 2em;"}
Thank you for your attention
:::
::::
:::
Reach me at: [**mattia.piazza@unitn.it**](mailto:*mattia.piazza@unitn.it)
<!-- ##### Danke für Ihre Aufmerksamkeit! -->
:::



<!-- backup -->




# Backup {.appendix .unnumbered .unlisted}


## SUNRISE {.unnumbered .unlisted}
### Suggested speed

![](./data/img_ODD/safe_speed.png){width=70% fig-align="center"}



## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

Start by taking $w_T$ small and $\mathbf{W_{qss}}$ big (Constant linear velocity). 
Fixed initial conditions and free final conditions

![](./data/MLT/OCI/Track_Problem0.png){width=100% fig-align="center"}

## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

Increase $w_T$ to 1 small and decrese $\mathbf{W_{qss}}$ to $0$.
Fixed initial conditions and free final conditions

![](./data/MLT/OCI/Track_Problem1.png){width=100% fig-align="center"}

## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

$w_T = 1$ and $\mathbf{W_{qss}} = 0$.
Fixed initial conditions and final conditions equal to the initial conditions.

![](./data/MLT/OCI/Track_Problem2.png){width=100% fig-align="center"}

## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

$w_T = 1$ and $\mathbf{W_{qss}} = 0$.
Cyclic conditions (Initial and final conditions are the same).

![](./data/MLT/OCI/Track_Problem3.png){width=100% fig-align="center"}

## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

$w_T = 1$ and $\mathbf{W_{qss}} = 0$.
Cyclic conditions (Initial and final conditions are the same).
Push the penalty values on constraints.

![](./data/MLT/OCI/Track_Problem4.png){width=100% fig-align="center"}


## MLT for MotoGP {.unnumbered .unlisted}
### Continuation - Homotopy

Compare solutions

![](./data/MLT/OCI/Track_problemCompare.png){width=100% fig-align="center"}


## SUNRISE {.unnumbered .unlisted}
### Possible usage

:::{.columns}
:::: {.column width="50%"}
![](./data/img_ODD/Stochastic model.png){width=100% fig-align="center"}
::::
:::: {.column width="50%"}
![](./data/img_ODD/consensus_data_1.png){width=80% fig-align="center"}
::::
:::

## 3 Points Dubins Path [@piazza2024efficient;@piazza2024non] {.unnumbered .unlisted}

:::{.columns}
:::: {.column width="50%"}
An efficient algorithm to solve the 3PDP problem.

| Algorithm | Iterations | Time ($ms$) | N. Dubins calls |
|-----------|------------|-------------|-----------------|
| PS        | 88.35      | 0.217       | $\sim$ 176       |
| PS + 748  | 77.70      | 0.187       | $\sim$ 155       |
| PT        | 74.78      | 0.179       | $\sim$ 149       |
| [PT + 748]{style="color: red;"}  | [68.54]{style="color: red;"}      | 0.163       | $\sim$ 137       |
| DBM       | 360        | 55.577      | 720             |
| iDPP      | 128        | 19.720      | 256             |
::::
:::: {.column width="50%"}
![](./data/Tikz/onepoint_final_rev.png){width=70% fig-align="center"}
::::
:::
